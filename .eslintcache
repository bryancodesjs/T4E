[{"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\index.js":"1","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\App.js":"2","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\reportWebVitals.js":"3","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\routes.js":"4","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\AuthGaurd.js":"5","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\context\\AuthContext.js":"6","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Common\\Loader.js":"7","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\LandingMian.js":"8","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeMain.js":"9","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Registration\\Registration.js":"10","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Login\\Login.js":"11","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Tutorial\\Tutorial.js":"12","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Faq.js":"13","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Features.js":"14","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Matrix.js":"15","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeStatusFor12x.js":"16","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeSideDashboard.js":"17","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeStatusFor5x.js":"18","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\Nav.js":"19","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Common\\ToastContainerCust.js":"20","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Utils\\Utils.js":"21","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\SubPart12X.js":"22","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\SubPart5X.js":"23","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\index.js":"24","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\reportWebVitals.js":"25","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\App.js":"26","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\routes.js":"27","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\AuthGaurd.js":"28","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\context\\AuthContext.js":"29","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Common\\Loader.js":"30","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\LandingMian.js":"31","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Login\\Login.js":"32","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeMain.js":"33","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Registration\\Registration.js":"34","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Tutorial\\Tutorial.js":"35","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Faq.js":"36","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Features.js":"37","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Common\\ToastContainerCust.js":"38","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Matrix.js":"39","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeSideDashboard.js":"40","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\Nav.js":"41","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeStatusFor12x.js":"42","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeStatusFor5x.js":"43","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Utils\\Utils.js":"44","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\SubPart12X.js":"45","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\SubPart5X.js":"46"},{"size":517,"mtime":1613330603511,"results":"47","hashOfConfig":"48"},{"size":1702,"mtime":1613330603477,"results":"49","hashOfConfig":"48"},{"size":375,"mtime":1613330603512,"results":"50","hashOfConfig":"48"},{"size":1208,"mtime":1613330603512,"results":"51","hashOfConfig":"48"},{"size":417,"mtime":1613330603478,"results":"52","hashOfConfig":"48"},{"size":1143,"mtime":1613330603509,"results":"53","hashOfConfig":"48"},{"size":718,"mtime":1613330603479,"results":"54","hashOfConfig":"48"},{"size":3692,"mtime":1613330603486,"results":"55","hashOfConfig":"48"},{"size":4282,"mtime":1613330603480,"results":"56","hashOfConfig":"48"},{"size":8545,"mtime":1613330603489,"results":"57","hashOfConfig":"48"},{"size":11015,"mtime":1613918157383,"results":"58","hashOfConfig":"48"},{"size":11569,"mtime":1613330603489,"results":"59","hashOfConfig":"48"},{"size":8354,"mtime":1613330603485,"results":"60","hashOfConfig":"48"},{"size":3518,"mtime":1613330603486,"results":"61","hashOfConfig":"48"},{"size":2330,"mtime":1613330603487,"results":"62","hashOfConfig":"48"},{"size":1716,"mtime":1613330603482,"results":"63","hashOfConfig":"48"},{"size":11135,"mtime":1613330603481,"results":"64","hashOfConfig":"48"},{"size":2760,"mtime":1613330603483,"results":"65","hashOfConfig":"48"},{"size":2102,"mtime":1613330603483,"results":"66","hashOfConfig":"48"},{"size":416,"mtime":1613330603479,"results":"67","hashOfConfig":"48"},{"size":747,"mtime":1613918275044,"results":"68","hashOfConfig":"48"},{"size":9472,"mtime":1613330603484,"results":"69","hashOfConfig":"48"},{"size":9105,"mtime":1613330603484,"results":"70","hashOfConfig":"48"},{"size":517,"mtime":1613330603511,"results":"71","hashOfConfig":"72"},{"size":375,"mtime":1613330603512,"results":"73","hashOfConfig":"72"},{"size":1702,"mtime":1613330603477,"results":"74","hashOfConfig":"72"},{"size":1208,"mtime":1613330603512,"results":"75","hashOfConfig":"72"},{"size":417,"mtime":1613330603478,"results":"76","hashOfConfig":"72"},{"size":1143,"mtime":1613330603509,"results":"77","hashOfConfig":"72"},{"size":718,"mtime":1613330603479,"results":"78","hashOfConfig":"72"},{"size":8534,"mtime":1616818952175,"results":"79","hashOfConfig":"72"},{"size":10974,"mtime":1616819773030,"results":"80","hashOfConfig":"72"},{"size":3805,"mtime":1617486228614,"results":"81","hashOfConfig":"72"},{"size":8637,"mtime":1616819795333,"results":"82","hashOfConfig":"72"},{"size":11569,"mtime":1613330603489,"results":"83","hashOfConfig":"72"},{"size":8354,"mtime":1613330603485,"results":"84","hashOfConfig":"72"},{"size":3593,"mtime":1614653125044,"results":"85","hashOfConfig":"72"},{"size":416,"mtime":1613330603479,"results":"86","hashOfConfig":"72"},{"size":2805,"mtime":1614816863137,"results":"87","hashOfConfig":"72"},{"size":14762,"mtime":1616907351702,"results":"88","hashOfConfig":"72"},{"size":2441,"mtime":1616820013974,"results":"89","hashOfConfig":"72"},{"size":1650,"mtime":1617385538618,"results":"90","hashOfConfig":"72"},{"size":2724,"mtime":1617492200084,"results":"91","hashOfConfig":"72"},{"size":747,"mtime":1613918275044,"results":"92","hashOfConfig":"72"},{"size":9893,"mtime":1617491866828,"results":"93","hashOfConfig":"72"},{"size":9548,"mtime":1617491682748,"results":"94","hashOfConfig":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d54d5y",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"1ohr0zm",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"143"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"143"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"143"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"143"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"143"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"143"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\index.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\App.js",["196"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\reportWebVitals.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\routes.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\AuthGaurd.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\context\\AuthContext.js",["197"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Common\\Loader.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\LandingMian.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeMain.js",["198"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Registration\\Registration.js",["199","200"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Login\\Login.js",["201","202","203"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Tutorial\\Tutorial.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Faq.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Features.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\Landing\\Matrix.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeStatusFor12x.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeSideDashboard.js",["204","205","206"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\BackOfficeStatusFor5x.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\Nav.js",["207","208"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Common\\ToastContainerCust.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Utils\\Utils.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\SubPart12X.js",["209","210","211"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\XtronSolution\\src\\Components\\BackOffice\\SubPart5X.js",["212","213","214","215"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\index.js",[],["216","217"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\reportWebVitals.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\App.js",["218"],"import React, { Suspense, Fragment } from 'react';\r\nimport { Router, Switch, Route, HashRouter } from 'react-router-dom';\r\nimport { routes } from '../src/routes';\r\nimport { createBrowserHistory } from 'history';\r\nimport AuthContext from \"../src/context/AuthContext\";\r\nimport AuthGuard from '../src/AuthGaurd';\r\nimport './custom.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loader from './Common/Loader'\r\n\r\n// const FOUNDATION_ADDRESS = 'TXdoGJ93xpjL6HZ53ZaN3ER7aUDDzyNaxV';\r\n// const WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\n\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"globalwrap\">\r\n      <AuthContext>\r\n        <HashRouter history={history}>\r\n          <RenderRoutes data={routes} />\r\n        </HashRouter>\r\n      </AuthContext>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction RenderRoutes(props) {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <Loader active={true}></Loader>\r\n      }>\r\n      <Switch>\r\n        {props.data.map((route, i) => {\r\n          const Component = route.component;\r\n          const Guard = route.guard ? AuthGuard : Fragment;\r\n          return (\r\n            <Route\r\n              exact={route.exact}\r\n              key={i}\r\n              path={route.path}\r\n              render={(props) => (\r\n                <Guard>\r\n                  {route.routes\r\n                    ? <RenderRoutes data={route.routes} />\r\n                    : <Component {...props} />}\r\n                </Guard>\r\n              )}\r\n            />\r\n          )\r\n        })}\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\routes.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\AuthGaurd.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\context\\AuthContext.js",["219"],"import React, { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\n// import ApiConfig from 'src/config/ApiConfig';\r\nexport const AuthContext = createContext();\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken);\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n    } else {\r\n        localStorage.removeItem('accessToken');\r\n        delete axios.defaults.headers.common.Authorization;\r\n    }\r\n};\r\n\r\nfunction checkLogin() {\r\n    const accessToken = window.localStorage.getItem('accessToken');\r\n    return accessToken ? true : false;\r\n}\r\n\r\n\r\nexport default function AuthProvider(props) {\r\n    const [isLogin, setIsLogin] = useState(checkLogin());\r\n    const [userData, setUserData] = useState({});\r\n\r\n    let data = {\r\n        userLoggedIn: isLogin,\r\n        userData,\r\n        userLogIn: (type, data) => {\r\n            setSession(data);\r\n            setIsLogin(type);\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={data}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Common\\Loader.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\LandingMian.js",["220","221","222"],"import React, { useEffect, useState } from 'react'\r\nimport Faq from './Faq'\r\nimport Features from './Features'\r\nimport Matrix from './Matrix'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\r\nimport headimg from '../../assets/img/waifu.png'\r\nimport minitron from '../../assets/img/mini-tron.png'\r\nimport t4elogo from '../../assets/img/tron alliance logo.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\nimport usaflag from '../../assets/img/usaflag.png'\r\nfunction LandingMian(props) {\r\n    const propslang = props.location && props.location.state\r\n    useEffect(() => {\r\n        document.title = \"Tron For Everyone\"\r\n    }, []);\r\n\r\n    const [lang, setLang] = useState(propslang === \"Spanish\" ? \"Spanish\" : \"English\")\r\n    const history = useHistory();\r\n    const navigateTo = (url) => {\r\n        history.push({\r\n            pathname: url,\r\n            state: lang\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Heading /> */}\r\n            <div className=\"navig d-flex justify-content-center\">\r\n            <div className=\"container d-flex justify-content-between align-items-center\">\r\n\r\n                <Link to={{\r\n                    pathname: \"/\",\r\n                    state: lang\r\n                }} className=\"logo-payment-link\">\r\n                    <img className=\"logo-payment-nav\" src={t4elogo} alt=\"logo xtron\" />\r\n                </Link>\r\n\r\n\r\n                <div className=\"action-links\">\r\n                    <select name=\"lang\" id=\"lang\" value={lang} onChange={(e) => setLang(e.target.value)}>\r\n                        <option value=\"English\">English</option>\r\n                        <option value=\"Spanish\">Spanish</option>\r\n                    </select>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/back-office-main\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Home</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/back-office-main\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Dashboard</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-outline-success custombtn-3\" onClick={() => navigateTo('/login')}>\r\n                            {lang === 'English' ? \"Login\" : \"Login\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"container text-center\">\r\n                \r\n                \r\n                <div className=\"heading-content d-flex flex-row\">\r\n                    <div className=\"col-md-6 left-heading text-left\">\r\n                    <h1 className=\"mt-5 whitext heading-title\"><strong>\r\n                        {lang === 'English' ? \"Invest once. Earn TRX Forever\" \r\n                        : \r\n                        \"Gana compartiendo oportunidades\"}</strong></h1>\r\n                    <h3 className=\"whitext lightweight\">\r\n                        {lang === 'English' ? \r\n                        \"Join the first Smart Contract that pays you to share content on your Social Media Apps. Instant payouts, up to 100% commission.\" \r\n                        : \r\n                        \"Únete al primer Contrato Inteligente que te paga por compartir contenido en tus redes sociales. Pagos instantaneos, hasta 100% en comisiones.\"}</h3>\r\n                    <div className=\"mt-5\">\r\n                        <button className=\"btn btn-success custombtn\" onClick={() => navigateTo('/registration')}>\r\n                            {lang === 'English' ? \"Start Earning Now\" : \"Comenzar a Ganar\"}\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 right-heading\">\r\n                        <img className=\"heading-woman\" src={headimg} alt=\"woman holding a phone earning tron\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid bg-accent\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"pt-4 pb-4\">\r\n                        {lang === 'English' ?\r\n                        \"HYBRID COMMISSION PLAN\"\r\n                        :\r\n                        \"PLAN DE COMISIONES HÍBRIDO\"\r\n                        }\r\n                    </h4>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"col-lg-3 pb-4\">\r\n                            <h3>\r\n                                {lang === 'English' ?\r\n                                    \"Direct\"\r\n                                    :\r\n                                    \"Directo\"\r\n                                }\r\n                            </h3>\r\n                            <h1>100% CPA</h1>\r\n                            <h4>\r\n                                {lang === 'English' ?\r\n                                    \"For every direct affiliate\"\r\n                                    :\r\n                                    \"Por cada afiliado directo\"\r\n                                }\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-lg-1 pb-4 d-flex align-items-center\">\r\n                            <h1>+</h1>\r\n                        </div>\r\n                        <div className=\"col-lg-4 pb-4\">\r\n                            <h3>Residual</h3>\r\n                            <h1>20% CPA</h1>\r\n                            <h4>\r\n                                {lang === 'English' ?\r\n                                \"From up to 248,832‬ indirect affiliates in your team\"\r\n                                :\r\n                                \"De 248,832 posiciones disponibles en tu equipo\"\r\n                                }\r\n                                \r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-lg-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid d-flex justify-content-center bg-gray\">\r\n                <div className=\"heading-square bg-accent d-flex justify-content-center\">\r\n                    <h3><img className=\"minitron\" src={minitron} alt=\"mini tron logo\"/></h3>\r\n                </div>\r\n            </div>\r\n            <Features lang={lang} />\r\n            <div className=\"container-fluid d-flex justify-content-center\">\r\n                <div className=\"heading-square bg-gray d-flex justify-content-center\">\r\n                    <h3 className=\"minicash\"><b>$</b></h3>\r\n                </div>\r\n            </div>\r\n            {/*<Counter lang={lang} />*/}\r\n            <br /><br /><br />\r\n            <Matrix lang={lang} />\r\n            {/*<Faq lang={lang} />*/}\r\n                    <p className=\"text-center\" id=\"address\">\r\n                    {lang === 'English' ? \"Support\" : \"Soporte\"} : <a rel=\"noreferrer\" target=\"_blank\" href=\"mailto:support@xtron.online\">support@xtron.online <FaExternalLinkAlt /></a>\r\n                    </p>\r\n                    <p className=\"text-center\" id=\"address\">\r\n                    {lang === 'English' ? \"Contract address\" : \"Direccion del contrato\"} : <a rel=\"noreferrer\" target=\"_blank\" href={`https://tronscan.org/#/contract/TWDECXnA4oAGrDYRNS7ex1izx3Mgys9SRp/transactions`}>TWDECXnA4oAGrDYRNS7ex1izx3Mgys9SRp <FaExternalLinkAlt /></a>\r\n                    </p>\r\n            <h4 className=\"text-center pb-5 signature\">XTRON GLOBAL 2021</h4>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default LandingMian\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Login\\Login.js",["223","224","225","226"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport xtronLogo from '../../assets/img/xtronlong.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext'\r\n// import TronWeb from 'tronweb'\r\nimport { FaSignInAlt } from \"react-icons/fa\";\r\nimport { toast } from 'react-toastify';\r\nimport ToastContainerCust from '../../Common/ToastContainerCust'\r\nimport TronWeb from 'tronweb'\r\nimport Utils from '../../Utils/Utils'\r\nimport ReactGA from 'react-ga';\r\nimport t4elogo from '../../assets/img/tron alliance logo.png'\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\n\r\n\r\nfunction switchTo1() {\r\n    \r\n    document.getElementById('method1btn').classList.add('switchbtn-active');\r\n    document.getElementById('method2btn').classList.remove('switchbtn-active');\r\n    document.getElementById('method1wrap').classList.remove('hide');\r\n    document.getElementById('method2wrap').classList.add('hide');\r\n}\r\n\r\nfunction switchTo2() {\r\n    \r\n    document.getElementById('method1btn').classList.remove('switchbtn-active');\r\n    document.getElementById('method2btn').classList.add('switchbtn-active');\r\n    document.getElementById('method1wrap').classList.add('hide');\r\n    document.getElementById('method2wrap').classList.remove('hide');\r\n}\r\n\r\nfunction Login(props) {\r\n    const lang = props.location && props.location.state\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const [backOfficeID, SetBackOfficeID] = useState('')\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n    const [tronWeb, settronWeb] = useState({\r\n        installed: false,\r\n        loggedIn: false\r\n    })\r\n\r\n    useEffect(async () => {\r\n        (async function () {\r\n            await new Promise(resolve => {\r\n                const tronWebState = {\r\n                    installed: !!window.tronWeb,\r\n                    loggedIn: window.tronWeb && window.tronWeb.ready\r\n                };\r\n                if (tronWebState.installed) {\r\n                    settronWeb(tronWebState)\r\n                    return resolve();\r\n                }\r\n                let tries = 0;\r\n                const timer = setInterval(() => {\r\n                    if (tries >= 10) {\r\n                        const TRONGRID_API = process.env.REACT_APP_NETWORK;\r\n                        window.tronWeb = new TronWeb(\r\n                            TRONGRID_API,\r\n                            TRONGRID_API,\r\n                            TRONGRID_API\r\n                        );\r\n                        settronWeb({\r\n                            installed: false,\r\n                            loggedIn: false\r\n                        });\r\n                        clearInterval(timer);\r\n                        return resolve();\r\n                    }\r\n                    tronWebState.installed = !!window.tronWeb;\r\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n                    if (!tronWebState.installed) {\r\n                        return tries++;\r\n                    }\r\n                    else {\r\n                        clearInterval(timer);\r\n                    }\r\n                    settronWeb(tronWebState)\r\n                    resolve();\r\n                }, 100);\r\n            })\r\n            await Utils.setTronWeb(window.tronWeb);\r\n            setLoggedIn(true)\r\n        })();\r\n    }, []);\r\n\r\n    const CustomToastWithLink = () => (\r\n        <p>\r\n            {lang === 'English'\r\n                ?\r\n                <span>To use this app you must install TronLink.</span>\r\n                :\r\n                <span>Para utilizar esta app debe instalar TronLink.</span>\r\n            }\r\n\r\n        </p>\r\n    );\r\n\r\n    const loginSubmit = async () => {\r\n        if (backOfficeID !== '') {\r\n            if (loggedIn) {\r\n                try {\r\n                    const idToAddress = await Utils.contract.idToAddress(backOfficeID).call();\r\n                    auth.userLogIn(true, 'Login');\r\n                    localStorage.removeItem('backOfficeID')\r\n                    localStorage.setItem('backOfficeID', TronWeb.address.fromHex(idToAddress));\r\n                    history.push({\r\n                        pathname: \"/back-office-main\",\r\n                        state: { lang: lang }\r\n                    })\r\n                    \r\n                    window.location.reload(false);\r\n                }\r\n                catch (error) {\r\n                    toast.error(\"Error\")\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                toast.error(CustomToastWithLink)\r\n            }\r\n        }\r\n        else {\r\n            if (lang === 'English') {\r\n                toast.warn(\"Enter your ID\")\r\n            }\r\n            else {\r\n                toast.warn(\"Introduzca su ID\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const loginSubmit2 = async () => {\r\n        if (backOfficeID !== '') {\r\n            if (loggedIn) {\r\n                if (backOfficeID.length > 33) {\r\n                    try {\r\n                \r\n                        try {\r\n                            auth.userLogIn(true, 'Login');\r\n                            localStorage.removeItem('backOfficeID')\r\n                            localStorage.setItem('backOfficeID', backOfficeID);\r\n                            history.push({\r\n                             pathname: \"/back-office-main\",\r\n                              state: { lang: lang }\r\n                            })\r\n                            ReactGA.event({\r\n                            category: 'User',\r\n                            action: 'Successful Login'\r\n                            });\r\n                            window.location.reload(false);\r\n                            }\r\n                        catch (error) {\r\n                            toast.error(\"Error\")\r\n                            console.log(error)\r\n                        }\r\n                \r\n                    } catch (error) {\r\n                        alert.show(\"Wallet Error\")\r\n                        \r\n                        }\r\n                } else {\r\n                    toast.error(\"Wallet invalida\")\r\n                }\r\n            }\r\n            else {\r\n                toast.error(CustomToastWithLink)\r\n            }\r\n        }\r\n        else {\r\n            if (lang === 'English') {\r\n                toast.warn(\"Enter your ID\")\r\n            }\r\n            else {\r\n                toast.warn(\"Introduzca su ID\")\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"bg-clear\" id=\"backofficewrap\">\r\n            <ToastContainerCust />\r\n            <div className=\"container\">\r\n                <div className=\"text-center logo-payment-wrap\">\r\n                    <Link to={{\r\n                        pathname: \"/\",\r\n                        state: lang\r\n                    }} className=\"logo-payment-link\">\r\n                        <img className=\"logo-login\" src={t4elogo} alt=\"logo tron for everyone\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center \" id=\"\">\r\n                    <div className=\"\">\r\n                        <div className=\"xwrap2\">\r\n                            <div className=\"text-center registration-items\">\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h2>Login Area</h2>\r\n                                        :\r\n                                        <h2>Iniciar sesión</h2>\r\n                                }\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h4>Enter your ID/Wallet to access your backoffice</h4>\r\n                                        :\r\n                                        <h4>Ingrese su ID/Wallet para acceder a su backoffice</h4>\r\n                                }\r\n                                <div className=\"login-switch-wrap\">\r\n                                    <button id=\"method1btn\" className=\"switchbtn switchbtn-active\" onClick={() => switchTo1()}>ID</button>\r\n                                    <button id=\"method2btn\" className=\"switchbtn\" onClick={() => switchTo2()}> TRX Wallet</button>\r\n                                </div>\r\n                                <div id=\"method1wrap\" className=\"login-method-1\">\r\n                                    <div className=\"registration-input\">\r\n                                        <input id=\"customInput\" name=\"customInputName\" type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"registration-btn\">\r\n                                        <button className=\"btn full-width btn-success custombtn\" onClick={() => loginSubmit()} >LOGIN</button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                                <div id=\"method2wrap\" className=\"login-method-2 hide\">\r\n                                    <div className=\"registration-input\">\r\n                                        <input id=\"customInput\" name=\"customInputName\" type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"registration-btn\">\r\n                                        <button className=\"btn full-width btn-success custombtn\" onClick={() => loginSubmit2()} >LOGIN</button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"h20\"></div>\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h4>Don't have an account yet?</h4>\r\n                                        :\r\n                                        <h4>¿Aún no tienes una cuenta?</h4>\r\n                                }\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <Link to={{ pathname: \"/registration\", state: lang }}><h4><FaSignInAlt />  Register</h4></Link>\r\n                                        :\r\n                                        <Link to={{ pathname: \"/registration\", state: lang }}><h4><FaSignInAlt />  REGISTRO</h4></Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeMain.js",["227","228","229"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Registration\\Registration.js",["230","231","232"],"import React, { useEffect, useState } from 'react'\r\nimport xtronLogo from '../../assets/img/xtronlong.png'\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport TronWeb from 'tronweb'\r\nimport { toast } from 'react-toastify';\r\nimport { FaExclamationCircle, FaSignInAlt } from \"react-icons/fa\";\r\nimport ToastContainerCust from '../../Common/ToastContainerCust'\r\nimport Utils from '../../Utils/Utils'\r\nimport { MyClockLoader } from '../../Common/Loader'\r\nimport t4elogo from '../../assets/img/tron alliance logo.png'\r\n\r\n\r\nfunction Registration(props) {\r\n    const lang = props.location && props.location.state\r\n    const history = useHistory();\r\n    const [backOfficeID, SetBackOfficeID] = useState('')\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n    const [isModalOpen, SetisModalOpen] = useState(false)\r\n    const [tronWeb, settronWeb] = useState({\r\n        installed: false,\r\n        loggedIn: false\r\n    })\r\n    const { id } = useParams();\r\n    const CustomToastWithLink = () => (\r\n        <p>\r\n            Please login to your Tronlink account\r\n        </p>\r\n    );\r\n\r\n    useEffect(async () => {\r\n        await new Promise(resolve => {\r\n            const tronWebState = {\r\n                installed: !!window.tronWeb,\r\n                loggedIn: window.tronWeb && window.tronWeb.ready\r\n            };\r\n\r\n            if (tronWebState.installed) {\r\n                settronWeb(tronWebState)\r\n                return resolve();\r\n            }\r\n            let tries = 0;\r\n            const timer = setInterval(() => {\r\n                if (tries >= 10) {\r\n                    const TRONGRID_API = process.env.REACT_APP_NETWORK;\r\n                    window.tronWeb = new TronWeb(\r\n                        TRONGRID_API,\r\n                        TRONGRID_API,\r\n                        TRONGRID_API\r\n                    );\r\n                    settronWeb({\r\n                        installed: false,\r\n                        loggedIn: false\r\n                    });\r\n                    clearInterval(timer);\r\n                    return resolve();\r\n                }\r\n                tronWebState.installed = !!window.tronWeb;\r\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n                if (!tronWebState.installed) {\r\n                    return tries++;\r\n                }\r\n                else {\r\n                    clearInterval(timer);\r\n                }\r\n                settronWeb(tronWebState)\r\n\r\n                resolve();\r\n            }, 100);\r\n        })\r\n        await Utils.setTronWeb(window.tronWeb);\r\n        setLoggedIn(true)\r\n    }, []);\r\n\r\n    const registationSubmit = async () => {\r\n        let warnmsg = \"Porfavor no actualice la página y espere mientras su pago es procesado. Esto puede tardar unos minutos.\"\r\n\r\n        localStorage.removeItem('backOfficeID')\r\n        if (backOfficeID !== '' || id !== undefined) {\r\n            if (loggedIn) {\r\n                try {\r\n                    SetisModalOpen(true)\r\n                    if (lang === 'English') {\r\n                        warnmsg = \"Please do not refresh the page and wait while your payment is processed. This may take a few minutes.\"\r\n                    }\r\n                    toast.warn(warnmsg, {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: false,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                    const idToAddress = await Utils.contract.idToAddress(backOfficeID).call();\r\n                    const tronAdd = TronWeb.address.fromHex(idToAddress)\r\n                    await Utils.contract.registrationExt(tronAdd).send({\r\n                        feeLimit: 100000000,\r\n                        callValue: 440000000,\r\n                        shouldPollResponse: true\r\n                    });\r\n                    SetisModalOpen(false)\r\n                    history.push({\r\n                        pathname: \"/back-office-main\",\r\n                        state: { lang: lang }\r\n                    })\r\n                    \r\n                    window.location.reload(false);\r\n                } catch (error) {\r\n                    SetisModalOpen(false)\r\n                    console.log(error)\r\n                    toast.error(\"error\", error)\r\n                }\r\n            }\r\n            else {\r\n                toast.error(CustomToastWithLink)\r\n            }\r\n        }\r\n        else {\r\n            if (lang === 'English') {\r\n                toast.warn(\"Enter your sponsor's ID\")\r\n            }\r\n            else {\r\n                toast.warn(\"Ingrese el ID de su patrocinador\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-clear\" id=\"backofficewrap\">\r\n            <ToastContainerCust />\r\n            <div className=\"container\">\r\n                <div className=\"text-center logo-payment-wrap\">\r\n                    {\r\n                        isModalOpen ?\r\n                            <div className=\"logo-payment-link\">\r\n                                <img className=\"logo-login\" src={t4elogo} alt=\"logo xtron\" />\r\n                            </div> :\r\n                            <Link to={{\r\n                                pathname: \"/\",\r\n                                state: lang\r\n                            }} className=\"logo-payment-link\">\r\n                                <img className=\"logo-login\" src={t4elogo} alt=\"logo xtron\" />\r\n                            </Link>\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"row \" id=\"\">\r\n                    <div className=\"registration-main d-flex justify-content-center\" style={{ width: \"100%\" }}>\r\n                        <div className=\"xwrap2\">\r\n                            <div className=\"text-center registration-items\">\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h2>Register</h2>\r\n                                        :\r\n                                        <h2>Registro</h2>\r\n                                }\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h4>If you don't have a sponsor, use 1</h4>\r\n                                        :\r\n                                        <h4>Si no tiene un patrocinador, use 1</h4>\r\n                                }\r\n\r\n\r\n                                <MyClockLoader active={isModalOpen} />\r\n                                {id ?\r\n                                    <div className=\"registration-input\">\r\n                                        <input type=\"text\" value={id} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} readOnly />\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"registration-input\">\r\n                                        <input type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\r\n                                    </div>\r\n                                }\r\n                                <div className=\"registration-btn mb-2\">\r\n                                    <button className=\"btn btn-success full-width custombtn\" onClick={() => registationSubmit()} disabled={isModalOpen} >{lang === 'English' ? \"REGISTER\" : \"REGISTRO\"}</button>\r\n                                </div>\r\n                                {\r\n                                    lang === 'English' ?\r\n                                        <h4><FaExclamationCircle /> Please confirm your sponsor's ID before making a payment.</h4>\r\n                                        :\r\n                                        <h4><FaExclamationCircle /> Verifique el ID de su patrocinador antes de realizar un pago.</h4>\r\n                                }\r\n                                <div className=\"h20\"></div>\r\n                                {\r\n                                    isModalOpen ? <span><h4><FaSignInAlt /> Login</h4></span> : <Link to={{ pathname: \"/login\", state: lang }}><h4><FaSignInAlt /> Login</h4></Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Tutorial\\Tutorial.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Faq.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Features.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Common\\ToastContainerCust.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\Landing\\Matrix.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeSideDashboard.js",["233","234","235","236","237","238","239","240","241","242"],"import React, { useEffect, useContext } from 'react'\r\nimport tron32x from '../../assets/img/tron32x.png'\r\nimport x5matrix from '../../assets/img/m1.png'\r\nimport spinner from '../../assets/img/spinner.png'\r\nimport { useState } from 'react'\r\nimport { FaUsers, FaRegUserCircle, FaCircleNotch } from \"react-icons/fa\";\r\nimport { BackofficeContext } from './BackOfficeMain'\r\nimport TronWeb from 'tronweb'\r\nimport Utils from '../../Utils/Utils'\r\nimport TostContainer from '../../Common/ToastContainerCust'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios'\r\n\r\nfunction copyAffiliateLink() {\r\n    var copyText = document.getElementById(\"refLink\");\r\n    copyText.select();\r\n    // copyText.setSelectionRange(0, 99999); /*For mobile devices*/\r\n    document.execCommand(\"copy\");\r\n    toast.success(\"Copied\")\r\n}\r\n\r\nfunction BackOfficeSideDashboard(props) {\r\n\r\n    const lang = props.lang\r\n\r\n    const backofficeContextL = useContext(BackofficeContext)\r\n\r\n    const [UserId, setUserId] = useState(0)\r\n    const [partnersCount, setpartnersCount] = useState(0)\r\n    const [tronAccount, setTronAccount] = useState(\"\")\r\n    const [x12balanceTRX, setx12balanceTRX] = useState(0)\r\n    const [tronWeb, settronWeb] = useState({\r\n        installed: false,\r\n        loggedIn: false\r\n    })\r\n\r\n\r\n    useEffect(async () => {\r\n        axios.get(`https://api.coinlore.com/api/ticker/?id=2713`)\r\n            .then(res => {\r\n                backofficeContextL.dispatchM({ type: 'SetusdValue', payload: res.data[0].price_usd })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                window.location.reload(false);\r\n            })\r\n\r\n        await new Promise(resolve => {\r\n            const tronWebState = {\r\n                installed: !!window.tronWeb,\r\n                loggedIn: window.tronWeb && window.tronWeb.ready\r\n            };\r\n            if (tronWebState.installed) {\r\n                settronWeb(tronWebState)\r\n                return resolve();\r\n            }\r\n            let tries = 0;\r\n            const timer = setInterval(() => {\r\n                if (tries >= 10) {\r\n                    const TRONGRID_API = process.env.REACT_APP_NETWORK;\r\n                    window.tronWeb = new TronWeb(\r\n                        TRONGRID_API,\r\n                        TRONGRID_API,\r\n                        TRONGRID_API\r\n                    );\r\n\r\n                    settronWeb({\r\n                        installed: false,\r\n                        loggedIn: false\r\n                    });\r\n\r\n                    clearInterval(timer);\r\n                    return resolve();\r\n                }\r\n\r\n                tronWebState.installed = !!window.tronWeb;\r\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n                if (!tronWebState.installed) {\r\n                    return tries++;\r\n                }\r\n                else {\r\n                    clearInterval(timer);\r\n                }\r\n                settronWeb(tronWebState)\r\n                resolve();\r\n            }, 100);\r\n        })\r\n\r\n        await Utils.setTronWeb(window.tronWeb);\r\n        if (localStorage.getItem('backOfficeID') !== null && localStorage.getItem('accessToken') === 'Login') {\r\n            setTronAccount(localStorage.getItem('backOfficeID'))\r\n            try {\r\n                const lastlavel = await Utils.contract.users(localStorage.getItem('backOfficeID')).call();\r\n                const x12balance = await Utils.contract.x12balance(localStorage.getItem('backOfficeID')).call();\r\n                setx12balanceTRX((parseInt(x12balance._hex) / 1000000));\r\n                console.log(\"x12balance\", (parseInt(x12balance._hex) / 1000000))\r\n                setUserId(lastlavel.id._hex)\r\n                setpartnersCount(lastlavel.partnersCount._hex)\r\n                backofficeContextL.dispatchM({ type: 'partnerCount', payload: lastlavel.partnersCount._hex })\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        else {\r\n            setTronAccount(window.tronWeb.defaultAddress.base58)\r\n            try {\r\n                const lastlavel = await Utils.contract.users(window.tronWeb.defaultAddress.base58).call();\r\n                setUserId(lastlavel.id._hex)\r\n                setpartnersCount(lastlavel.partnersCount._hex)\r\n                backofficeContextL.dispatchM({ type: 'partnerCount', payload: lastlavel.partnersCount._hex })\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    function getFlooredFixed(v, d) {\r\n        return (Math.floor(v * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            {/*User Info*/}\r\n            <div className=\"col-lg-3 dash-card\">\r\n                <div className=\"h-100 d-flex border inner bg-clear mr-3 flex-column p-3\">\r\n                    <h3 className=\"text-left\">Welcome!</h3>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"icon-wrap\">\r\n                            <h2><FaRegUserCircle/></h2>\r\n                        </div>\r\n                        <div className=\"text-wrap\">\r\n                            <h2>User \r\n                                        { parseInt(UserId) === 0 ?\r\n                                        <img className=\"loading-spinner\" src={spinner}/>\r\n                                        :\r\n                                        <span><strong>{parseInt(UserId)}</strong></span>\r\n                                        }\r\n                            </h2>\r\n                            <h3 className=\"text-left\">Member</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Total Earnings*/}\r\n            <div className=\"col-lg-3 dash-card\">\r\n                <div className=\"h-100 d-flex border inner bg-clear mr-3 flex-column p-3\">\r\n                    <h3 className=\"text-left\">Total Earnings</h3>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"icon-wrap\">\r\n                            <h2><img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                        </div>\r\n                        <div className=\"text-wrap\">\r\n                            <h2>{backofficeContextL.backofficeDataM.total5x + x12balanceTRX} <small>TRX</small></h2>\r\n                            <h3 className=\"text-left secondary-text\">${getFlooredFixed(((backofficeContextL.backofficeDataM.total5x + x12balanceTRX) * backofficeContextL.backofficeDataM.usdValue), 2)} USD</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Direct Earnings*/}\r\n            <div className=\"col-lg-3 dash-card\">\r\n                <div className=\"h-100 d-flex border inner bg-clear mr-3 flex-column p-3\">\r\n                    <h3 className=\"text-left\">Direct Earnings</h3>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"icon-wrap\">\r\n                            <h2><img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                        </div>\r\n                        <div className=\"text-wrap w-100\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <h2>{backofficeContextL.backofficeDataM.total5x} TRX</h2>\r\n                                <h2 className=\"whitext\"><FaUsers color=\"#ff6e81\" /> {parseInt(partnersCount)}</h2>\r\n                            </div>\r\n                            <h3 className=\"text-left secondary-text\">${getFlooredFixed((backofficeContextL.backofficeDataM.total5x * backofficeContextL.backofficeDataM.usdValue), 2)} USD</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Team Earnings*/}\r\n            <div className=\"col-lg-3 dash-card\">\r\n                <div className=\"h-100 d-flex border inner bg-clear flex-column p-3 \">\r\n                    <h3 className=\"text-left\">Team Earnings</h3>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"icon-wrap\">\r\n                            <h2><img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                        </div>\r\n                        <div className=\"text-wrap w-100\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <h2>{x12balanceTRX} TRX</h2>\r\n                                <h2 className=\"whitext\"><FaUsers color=\"#ff6e81\" /> {parseInt(backofficeContextL.backofficeDataM.partnerCountM2)}</h2>\r\n                            </div>\r\n                            <h3 className=\"text-left secondary-text\">${getFlooredFixed((x12balanceTRX * backofficeContextL.backofficeDataM.usdValue), 2)} USD</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {/*\r\n            <div className=\"col-lg-3\">\r\n                <TostContainer />\r\n                <div className=\"userdefinition\">\r\n                    <div className=\"paymentlogo\">\r\n                        {\r\n                            lang === \"English\"\r\n                                ?\r\n                                <h3 className=\"whitext\">MY ID: <span className=\"ctatext\">{parseInt(UserId)}</span></h3>\r\n                                :\r\n                                <h3 className=\"whitext\">MI ID: <span className=\"ctatext\">{parseInt(UserId)}</span></h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    lang === 'English' ?\r\n                        <h3 className=\"whitext\">Total Earnings</h3>\r\n                        :\r\n                        <h3 className=\"whitext\">Ganancias Totales</h3>\r\n                }\r\n                <h2 className=\"text-left ctatext\">\r\n                    $ {getFlooredFixed(((backofficeContextL.backofficeDataM.total5x + x12balanceTRX) * backofficeContextL.backofficeDataM.usdValue), 2)} USD\r\n                </h2>\r\n                <h2 className=\"subtext earning_amount text-left\">{backofficeContextL.backofficeDataM.total5x + x12balanceTRX} TRX <img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                <hr className=\"custom_hr\" />\r\n                <div className=\"matrix_earnings\" style={{ paddingTop: \"0\" }}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <img className=\"matrix_logo\" src={x5matrix} alt=\"x5matrix\" />\r\n                        <div className=\"userinfo text-right\" style={{ marginTop: \"20%\" }}>\r\n                            <h3 className=\"whitext\">{parseInt(partnersCount)} <FaUsers color=\"#35FF69\" /></h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        lang === 'English' ?\r\n                            <h3 className=\"whitext\">Earnings</h3>\r\n                            :\r\n                            <h3 className=\"whitext\">Ganancias M1</h3>\r\n                    }\r\n                    <div className=\"earning_amount_container\">\r\n                        <h2 className=\"ctatext earning_amount\">$ {getFlooredFixed((backofficeContextL.backofficeDataM.total5x * backofficeContextL.backofficeDataM.usdValue), 2)} USD</h2>\r\n                    </div>\r\n                    <h2 className=\"earning_amount_trx subtext\">{backofficeContextL.backofficeDataM.total5x} TRX  <img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                </div>\r\n                <hr className=\"custom_hr\" />\r\n                <div className=\"matrix_earnings\" style={{ paddingTop: \"0\" }}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <img className=\"matrix_logo\" src={x12matrix} alt=\"x12matrix\" />\r\n                        <div className=\"userinfo text-right\" style={{ marginTop: \"20%\" }}>\r\n                            <h3 className=\"whitext\">{parseInt(backofficeContextL.backofficeDataM.partnerCountM2)} <FaUsers color=\"#35FF69\" /></h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        lang === 'English' ?\r\n                            <h3 className=\"whitext\">Earnings</h3>\r\n                            :\r\n                            <h3 className=\"whitext\">Ganancias</h3>\r\n                    }\r\n                    <div className=\"earning_amount_container\">\r\n                        <h2 className=\"ctatext earning_amount\">$ {getFlooredFixed((x12balanceTRX * backofficeContextL.backofficeDataM.usdValue), 2)} USD</h2>\r\n                    </div>\r\n                    <h2 className=\"earning_amount_trx subtext\">{x12balanceTRX} TRX  <img src={tron32x} className=\"tron_currency\" alt=\"tron32x\" /></h2>\r\n                </div>\r\n            </div>\r\n            */}\r\n\r\n            {/*<div className=\"affiliate_wrap xwrap\">\r\n                <div className=\"affiliate_heading\">\r\n                    {\r\n                        lang === 'English' ?\r\n                            <h3 className=\"ctatext\">Affiliate Link</h3>\r\n                            :\r\n                            <h3 className=\"ctatext\">Enlace de afiliado</h3>\r\n                    }\r\n                    <h3 className=\"whitext\">{parseInt(partnersCount)} <FaUsers color=\"#35FF69\" /></h3>\r\n                </div>\r\n                <div className=\"link_container\">\r\n                    <input type=\"text\" value={`https://xtron.online/#/registration/${parseInt(UserId)}`} id=\"refLink\" readOnly />\r\n                    <FaRegCopy className=\"ctatext\" onClick={copyAffiliateLink} />\r\n                </div> \r\n            </div>\r\n            <div className=\"wallet_wrap xwrap\">\r\n                {\r\n                    lang === 'English' ?\r\n                        <h3 className=\"ctatext\">My Wallet:</h3>\r\n                        :\r\n                        <h3 className=\"ctatext\">Mi billetera:</h3>\r\n                }\r\n                <p className=\"whitext\">{tronAccount}</p>\r\n            </div>\r\n            <div className=\"contract_wrap xwrap\">\r\n                {\r\n                    lang === 'English' ?\r\n                        <h3 className=\"ctatext\">Contract Address :</h3>\r\n                        :\r\n                        <h3 className=\"ctatext\">Dirección del contrato:</h3>\r\n                }\r\n                <a href={`https://tronscan.org/#/contract/TWDECXnA4oAGrDYRNS7ex1izx3Mgys9SRp/transactions`} rel=\"noreferrer\" target=\"_blank\"> <p className=\"whitext\">TWDECXnA4oAGrDYRNS7ex1izx3Mgys9SRp</p></a>\r\n            </div>*/}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackOfficeSideDashboard\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\Nav.js",["243","244","245","246"],"import React, { useEffect, useReducer } from 'react'\r\nimport t4elogo from '../../assets/img/tron alliance logo.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPowerOff, FaRegFileAlt, FaDollarSign } from \"react-icons/fa\";\r\n\r\nfunction MyNav(lang) {\r\n    \r\n    return (\r\n        <div className=\"navig d-flex justify-content-center\">\r\n            <div className=\"container d-flex justify-content-between align-items-center\">\r\n\r\n                <Link to={{\r\n                    pathname: \"/\",\r\n                    state: lang\r\n                }} className=\"logo-payment-link\">\r\n                    <img className=\"logo-payment-nav\" src={t4elogo} alt=\"logo xtron\" />\r\n                </Link>\r\n\r\n\r\n                <div className=\"action-links\">\r\n                    <Link to={{\r\n                        pathname: \"/back-office-main\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Home</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/back-office-main\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Dashboard</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/tutorial\",\r\n                        state: lang\r\n                    }} className=\"navicon\">\r\n                        <span className=\"naviconTXT\">Tutorial</span>\r\n                    </Link>\r\n\r\n                    <Link to={{\r\n                        pathname: \"/\",\r\n                        state: lang\r\n                    }} className=\"logo-payment-link\">\r\n                        <FaPowerOff size={30} color={'#f33f3f'} />\r\n                    </Link>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNav","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeStatusFor12x.js",["247"],"import React from 'react'\r\nimport SubPart12X from './SubPart12X'\r\nimport x12matrix from '../../assets/img/m2.png'\r\n\r\nfunction BackOfficeStatusFor12x(props) {\r\n    return (\r\n        <div className=\"xwrap border bg-clear\">\r\n            <div className=\"title_container\">\r\n                <div className=\"boxes_wraper_x12\">\r\n                    {/* <!-- this wraps all the matrix boxes--> */}\r\n                    <SubPart12X level={1} ammount={\"200\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={2} ammount={\"400\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={3} ammount={\"800\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={4} ammount={\"1600\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={5} ammount={\"3200\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={6} ammount={\"6400\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={7} ammount={\"12800\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={8} ammount={\"25600\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={9} ammount={\"51200\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={10} ammount={\"102400\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={11} ammount={\"204800\"} lang={props.lang && props.lang} />\r\n                    <SubPart12X level={12} ammount={\"409600\"} lang={props.lang && props.lang} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackOfficeStatusFor12x\r\n","C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\BackOfficeStatusFor5x.js",["248"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Utils\\Utils.js",[],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\SubPart12X.js",["249","250","251"],"C:\\Users\\Marketing\\Desktop\\SINFA-OFF\\T4E\\src\\Components\\BackOffice\\SubPart5X.js",["252","253","254","255"],{"ruleId":"256","severity":1,"message":"257","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":16},{"ruleId":"256","severity":1,"message":"260","line":24,"column":22,"nodeType":"258","messageId":"259","endLine":24,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":75,"column":8,"nodeType":"263","endLine":75,"endColumn":10,"suggestions":"264"},{"ruleId":"256","severity":1,"message":"265","line":18,"column":12,"nodeType":"258","messageId":"259","endLine":18,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":29,"column":15,"nodeType":"267","endLine":71,"endColumn":6},{"ruleId":"256","severity":1,"message":"268","line":16,"column":7,"nodeType":"258","messageId":"259","endLine":16,"endColumn":19},{"ruleId":"256","severity":1,"message":"265","line":43,"column":12,"nodeType":"258","messageId":"259","endLine":43,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":48,"column":15,"nodeType":"267","endLine":90,"endColumn":6},{"ruleId":"256","severity":1,"message":"265","line":32,"column":12,"nodeType":"258","messageId":"259","endLine":32,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":38,"column":15,"nodeType":"267","endLine":117,"endColumn":6},{"ruleId":"261","severity":1,"message":"269","line":117,"column":8,"nodeType":"263","endLine":117,"endColumn":10,"suggestions":"270"},{"ruleId":"256","severity":1,"message":"271","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"272","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":38},{"ruleId":"256","severity":1,"message":"265","line":18,"column":12,"nodeType":"258","messageId":"259","endLine":18,"endColumn":19},{"ruleId":"256","severity":1,"message":"273","line":25,"column":14,"nodeType":"258","messageId":"259","endLine":25,"endColumn":29},{"ruleId":"261","severity":1,"message":"274","line":69,"column":8,"nodeType":"263","endLine":69,"endColumn":10,"suggestions":"275"},{"ruleId":"256","severity":1,"message":"265","line":23,"column":12,"nodeType":"258","messageId":"259","endLine":23,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":32,"column":15,"nodeType":"267","endLine":72,"endColumn":6},{"ruleId":"261","severity":1,"message":"274","line":72,"column":8,"nodeType":"263","endLine":72,"endColumn":10,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":76,"column":97,"nodeType":"279","messageId":"280","endLine":76,"endColumn":99},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"256","severity":1,"message":"257","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":16},{"ruleId":"256","severity":1,"message":"260","line":24,"column":22,"nodeType":"258","messageId":"259","endLine":24,"endColumn":33},{"ruleId":"256","severity":1,"message":"285","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":11},{"ruleId":"256","severity":1,"message":"286","line":11,"column":10,"nodeType":"258","messageId":"259","endLine":11,"endColumn":20},{"ruleId":"256","severity":1,"message":"287","line":12,"column":8,"nodeType":"258","messageId":"259","endLine":12,"endColumn":15},{"ruleId":"256","severity":1,"message":"288","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":17},{"ruleId":"256","severity":1,"message":"268","line":15,"column":7,"nodeType":"258","messageId":"259","endLine":15,"endColumn":19},{"ruleId":"256","severity":1,"message":"265","line":42,"column":12,"nodeType":"258","messageId":"259","endLine":42,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":47,"column":15,"nodeType":"267","endLine":89,"endColumn":6},{"ruleId":"256","severity":1,"message":"289","line":8,"column":10,"nodeType":"258","messageId":"259","endLine":8,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":75,"column":8,"nodeType":"263","endLine":75,"endColumn":10,"suggestions":"290"},{"ruleId":"256","severity":1,"message":"291","line":77,"column":14,"nodeType":"258","messageId":"259","endLine":77,"endColumn":21},{"ruleId":"256","severity":1,"message":"288","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":17},{"ruleId":"256","severity":1,"message":"265","line":19,"column":12,"nodeType":"258","messageId":"259","endLine":19,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":30,"column":15,"nodeType":"267","endLine":72,"endColumn":6},{"ruleId":"256","severity":1,"message":"292","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":16},{"ruleId":"256","severity":1,"message":"293","line":6,"column":36,"nodeType":"258","messageId":"259","endLine":6,"endColumn":49},{"ruleId":"256","severity":1,"message":"294","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":21},{"ruleId":"256","severity":1,"message":"295","line":14,"column":10,"nodeType":"258","messageId":"259","endLine":14,"endColumn":27},{"ruleId":"256","severity":1,"message":"296","line":24,"column":11,"nodeType":"258","messageId":"259","endLine":24,"endColumn":15},{"ruleId":"256","severity":1,"message":"297","line":30,"column":12,"nodeType":"258","messageId":"259","endLine":30,"endColumn":23},{"ruleId":"256","severity":1,"message":"265","line":32,"column":12,"nodeType":"258","messageId":"259","endLine":32,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":38,"column":15,"nodeType":"267","endLine":117,"endColumn":6},{"ruleId":"261","severity":1,"message":"269","line":117,"column":8,"nodeType":"263","endLine":117,"endColumn":10,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":136,"column":41,"nodeType":"301","endLine":136,"endColumn":89},{"ruleId":"256","severity":1,"message":"271","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"272","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":38},{"ruleId":"256","severity":1,"message":"302","line":4,"column":22,"nodeType":"258","messageId":"259","endLine":4,"endColumn":34},{"ruleId":"256","severity":1,"message":"303","line":4,"column":36,"nodeType":"258","messageId":"259","endLine":4,"endColumn":48},{"ruleId":"256","severity":1,"message":"304","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":17},{"ruleId":"256","severity":1,"message":"292","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":16},{"ruleId":"256","severity":1,"message":"265","line":21,"column":12,"nodeType":"258","messageId":"259","endLine":21,"endColumn":19},{"ruleId":"256","severity":1,"message":"273","line":28,"column":14,"nodeType":"258","messageId":"259","endLine":28,"endColumn":29},{"ruleId":"261","severity":1,"message":"274","line":72,"column":8,"nodeType":"263","endLine":72,"endColumn":10,"suggestions":"305"},{"ruleId":"256","severity":1,"message":"265","line":24,"column":12,"nodeType":"258","messageId":"259","endLine":24,"endColumn":19},{"ruleId":"261","severity":1,"message":"266","line":33,"column":15,"nodeType":"267","endLine":73,"endColumn":6},{"ruleId":"261","severity":1,"message":"274","line":73,"column":8,"nodeType":"263","endLine":73,"endColumn":10,"suggestions":"306"},{"ruleId":"277","severity":1,"message":"278","line":77,"column":97,"nodeType":"279","messageId":"280","endLine":77,"endColumn":99},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setUserData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["307"],"'tronWeb' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'WEBSTORE_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'backofficeContextL'. Either include it or remove the dependency array.",["308"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.","'getFlooredFixed' is defined but never used.","React Hook useEffect has a missing dependency: 'showLevelDetails'. Either include it or remove the dependency array.",["309"],["310"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["311"],"no-negated-in-lhs",["312"],"'Faq' is defined but never used.","'FaPowerOff' is defined but never used.","'usaflag' is defined but never used.","'xtronLogo' is defined but never used.","'FaCog' is defined but never used.",["313"],"'refresh' is defined but never used.","'x5matrix' is defined but never used.","'FaCircleNotch' is defined but never used.","'TostContainer' is defined but never used.","'copyAffiliateLink' is defined but never used.","'lang' is assigned a value but never used.","'tronAccount' is assigned a value but never used.",["314"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaRegFileAlt' is defined but never used.","'FaDollarSign' is defined but never used.","'x12matrix' is defined but never used.",["315"],["316"],{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"324"},{"desc":"319","fix":"325"},{"desc":"321","fix":"326"},{"desc":"321","fix":"327"},"Update the dependencies array to be: [props.location.state]",{"range":"328","text":"329"},"Update the dependencies array to be: [backofficeContextL]",{"range":"330","text":"331"},"Update the dependencies array to be: [showLevelDetails]",{"range":"332","text":"333"},{"range":"334","text":"333"},{"range":"335","text":"329"},{"range":"336","text":"331"},{"range":"337","text":"333"},{"range":"338","text":"333"},[2412,2414],"[props.location.state]",[4540,4542],"[backofficeContextL]",[2744,2746],"[showLevelDetails]",[2741,2743],[2412,2414],[4557,4559],[2927,2929],[2874,2876]]